<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Run from the Enemy</title>
    <style>
        body {
            margin: 0;
            overflow: hidden;
            background-color: #000;
        }
        canvas {
            display: block;
            margin: auto;
            background-color: #111;
            border: 2px solid #fff;
        }
    </style>
</head>
<body>
    <canvas id="gameCanvas" width="800" height="600"></canvas>
    <script>
        const canvas = document.getElementById("gameCanvas");
        const ctx = canvas.getContext("2d");

        // Player
        const player = {
            x: 50,
            y: 50,
            size: 20,
            color: "lime",
            speed: 5
        };

        // Enemy
        const enemy = {
            x: 700,
            y: 500,
            size: 20,
            color: "red",
            speed: 2
        };

        // Player control
        let keys = {};
        window.addEventListener("keydown", (e) => {
            keys[e.code] = true;
        });

        window.addEventListener("keyup", (e) => {
            keys[e.code] = false;
        });

        // Main game loop
        function gameLoop() {
            // Update player position
            if (keys["ArrowUp"] && player.y > 0) player.y -= player.speed;
            if (keys["ArrowDown"] && player.y < canvas.height - player.size) player.y += player.speed;
            if (keys["ArrowLeft"] && player.x > 0) player.x -= player.speed;
            if (keys["ArrowRight"] && player.x < canvas.width - player.size) player.x += player.speed;

            // Update enemy position
            if (enemy.x > player.x) enemy.x -= enemy.speed;
            if (enemy.x < player.x) enemy.x += enemy.speed;
            if (enemy.y > player.y) enemy.y -= enemy.speed;
            if (enemy.y < player.y) enemy.y += enemy.speed;

            // Collision detection
            if (collision(player, enemy)) {
                alert("Game Over! You were caught!");
                resetGame();
            }

            // Draw the game
            draw();
            requestAnimationFrame(gameLoop);
        }

        // Collision detection function
        function collision(rect1, rect2) {
            return !(rect1.x + rect1.size < rect2.x || 
                     rect1.x > rect2.x + rect2.size || 
                     rect1.y + rect1.size < rect2.y || 
                     rect1.y > rect2.y + rect2.size);
        }

        // Draw player and enemy
        function draw() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.fillStyle = player.color;
            ctx.fillRect(player.x, player.y, player.size, player.size);
            ctx.fillStyle = enemy.color;
            ctx.fillRect(enemy.x, enemy.y, enemy.size, enemy.size);
        }

        // Reset game function
        function resetGame() {
            player.x = 50;
            player.y = 50;
            enemy.x = 700;
            enemy.y = 500;
        }

        // Start the game
        gameLoop();
    </script>
</body>
</html>
